" :hi List all the current highlight groups
" :so $VIMRUNTIME/syntax/hitest.vim
" vim.vim example of the syntax 
hi DTSGroup term=bold cterm=bold,underline ctermfg=Cyan guifg=#80a0ff gui=bold
hi def link M7Group Todo
syn match M7Group "FixMe"
syn match Todo "\<TODO\>"
syn match DTSGroup "\<DTS\d\{8}\>"
autocmd FileType c,cpp match Error /\s\+$/ | 2match Error /\t/

set wildignore=*.o,*~,*.pyc

"set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set tabstop=4 softtabstop=4 shiftwidth=4
autocmd FileType c,cpp set shiftwidth=4 | set expandtab 

nnoremap K i<CR><Esc>

set colorcolumn=81

autocmd! BufNewFile,BufRead * setlocal nofoldenable


" splite
nmap <Leader>h :spl<CR>
nmap <Leader>v :vspl<CR>
nmap + <C-W>+
nmap - <C-W>-

map <leader>y "+y
map <leader>p "+gP

" ctags setting, ctags -R, <C-]> go to defined, <C-T> return {
    set tags+=~/.vim/tags/system
    map <C-F12> :!ctags -R -I --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" }


" cscope setting, cscope -Rb, :cscope add ../cscope.out {
    function! LoadCscope()
      let db = findfile("cscope.out", ".;")
      if (!empty(db))
        let path = strpart(db, 0, match(db, "/cscope.out$"))
        set nocscopeverbose " suppress 'duplicate connection' error
        exe "cs add " . db . " " . path
        set cscopeverbose
      endif
    endfunction
    au BufEnter /* call LoadCscope()

    nmap <C-@>s :cs find s <C-R>=expand("<cword>")<CR><CR>
    nmap <C-@>g :cs find g <C-R>=expand("<cword>")<CR><CR>
    nmap <C-@>c :cs find c <C-R>=expand("<cword>")<CR><CR>
    nmap <C-@>t :cs find t <C-R>=expand("<cword>")<CR><CR>
    nmap <C-@>e :cs find e <C-R>=expand("<cword>")<CR><CR>
    nmap <C-@>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
    nmap <C-@>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
    nmap <C-@>d :cs find d <C-R>=expand("<cword>")<CR><CR>

    :set cscopequickfix=s-,c-,d-,i-,t-,e-
" }

setlocal dictionary+=~/.vim/dict/wordsEn.txt

    " Tabularize, add for markdown align {
        if isdirectory(expand("~/.vim/bundle/tabular"))
            nmap <Leader>a- :Tabularize /-<CR>
            vmap <Leader>a- :Tabularize /-<CR>
            nmap <Leader>a+ :Tabularize /+<CR>
            vmap <Leader>a+ :Tabularize /+<CR>
        endif
    " }

set scrolloff=0                 " Minimum lines to keep above and below cursor
inoremap jj <ESC>
noremap <leader>n :bn<CR>
noremap <leader>p :bp<CR>
noremap <leader>b :b#<CR>

